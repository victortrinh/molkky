{"version":3,"sources":["internalization/i18n.ts","serviceWorkerRegistration.ts","storage/darkModeOn.ts","storage/game.ts","components/shared/mainContainer.tsx","components/game.tsx","pages/home.tsx","routes/pages/home.ts","routes/pages/settings.ts","components/navigation/bottomNavigationBar.tsx","components/shared/noDecorationLink.tsx","components/navigation/navigationBar.tsx","storage/language.ts","pages/settings.tsx","pages/notFound.tsx","routes/index.ts","routes/pages/notFound.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","fr","i18n","use","detector","backend","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DARK_MODE_ON_KEY","GAME_KEY","MainContainer","props","StyledContainer","styled","Container","$centered","css","Game","game","isMobile","resetGame","useTranslation","t","StyledGamePage","$isMobile","StyledButtonGroup","color","fullWidth","onClick","size","startIcon","started","div","StyledHomePage","home","key","component","useState","setGame","loading","setLoading","theme","useTheme","useMediaQuery","breakpoints","down","useEffect","get","value","del","undefined","newGame","players","set","setGameInStorage","endIcon","path","exact","settings","StyledBottomNavigation","BottomNavigation","StyledBottomNavigationAction","BottomNavigationAction","BottomNavigationBar","history","useHistory","useLocation","pathname","setValue","mdUp","onChange","_","newValue","push","label","icon","NoDecorationLink","StyledLink","Link","LOGO_IMAGE_NAME","NavigationBar","StyledNavigationBar","position","$primarycolor","palette","primary","main","$secondarycolor","light","StyledLogoContainer","src","process","alt","smDown","to","variant","ExternalNavigationBar","LANGUAGE_KEY","StyledList","List","Settings","darkModeOn","toggleDarkModeOn","openLanguageCollapse","setOpenLanguageCollapse","changeLanguage","event","language","currentTarget","id","i18next","setLanguage","container","justify","alignItems","item","xs","sm","md","subheader","button","in","timeout","unmountOnExit","disablePadding","className","edge","checked","inputProps","StyledNotFoundPage","routes","App","prefersDarkMode","setDarkModeOn","setDarkMode","render","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.241e3338.chunk.js","sourcesContent":["import backend from \"i18next-xhr-backend\";\r\nimport detector from \"i18next-browser-languagedetector\";\r\nimport en from \"./translations/en.json\";\r\nimport fr from \"./translations/fr.json\";\r\nimport i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nconst resources = {\r\n  en,\r\n  fr,\r\n};\r\n\r\ni18n\r\n  .use(detector)\r\n  .use(backend)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\",\r\n\r\n    keySeparator: false,\r\n\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\n/**\n * Register the app\n * @param {Config} config - The app config\n */\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\n/**\n * Register valid\n * @param {string} swUrl - The url\n * @param {Config} config - The app config\n */\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\n/**\n * Checks valid service worker\n * @param {string} swUrl - The url\n * @param {Config} config - The app config\n */\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\n/**\n * Unregister application\n */\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { get, set } from \"idb-keyval\";\r\n\r\nconst DARK_MODE_ON_KEY = \"darkModeOn\";\r\n\r\nexport const getDarkMode = (): Promise<boolean> =>\r\n  get<boolean>(DARK_MODE_ON_KEY);\r\n\r\nexport const setDarkMode = (darkModeOn: boolean): Promise<void> =>\r\n  set(DARK_MODE_ON_KEY, darkModeOn);\r\n","import { del, get, set } from \"idb-keyval\";\r\n\r\nexport type Player = {\r\n  name: string;\r\n  score: number;\r\n};\r\n\r\nexport type Game = {\r\n  started: boolean;\r\n  players: Player[];\r\n};\r\n\r\nconst GAME_KEY = \"game\";\r\n\r\nexport const getGame = (): Promise<Game> => get<Game>(GAME_KEY);\r\n\r\nexport const setGame = (game: Game): Promise<void> => set(GAME_KEY, game);\r\n\r\nexport const deleteGame = (): Promise<void> => del(GAME_KEY);\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { Container } from \"@12emake/design-system\";\r\nimport { ContainerProps } from \"@12emake/design-system/dist/components/layout/container\";\r\nimport React from \"react\";\r\n\r\nexport const MainContainer: React.FunctionComponent<\r\n  ContainerProps & StyledContainerProps\r\n> = (props) => <StyledContainer {...props} />;\r\n\r\ntype StyledContainerProps = {\r\n  $centered?: boolean;\r\n};\r\n\r\nconst StyledContainer = styled(Container)<StyledContainerProps>`\r\n  width: 100vw;\r\n  height: calc(\r\n    100vh - 116px - env(safe-area-inset-top) - env(safe-area-inset-bottom)\r\n  );\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: calc(env(safe-area-inset-top, -20px) + 20px);\r\n  padding-bottom: calc(env(safe-area-inset-bottom, -20px) + 20px);\r\n\r\n  ${(props) =>\r\n    props.$centered &&\r\n    css`\r\n      justify-content: center;\r\n      align-items: center;\r\n    `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { Button } from \"@12emake/design-system\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport { Game as GameType } from \"../storage/game\";\r\nimport { MainContainer } from \"../components/shared/mainContainer\";\r\nimport React from \"react\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ntype GameProps = {\r\n  game: GameType;\r\n  resetGame: () => void;\r\n  isMobile: boolean;\r\n};\r\n\r\nexport const Game: React.FC<GameProps> = ({ game, isMobile, resetGame }) => {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <MainContainer $centered={!isMobile}>\r\n      <StyledGamePage $isMobile={isMobile}>Game</StyledGamePage>\r\n      <StyledButtonGroup $isMobile={isMobile}>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth={isMobile}\r\n          onClick={resetGame}\r\n          size={isMobile ? \"large\" : \"medium\"}\r\n          startIcon={<ClearIcon />}\r\n        >\r\n          {t(\"cancel-game\")}\r\n        </Button>\r\n        {game.started ? (\r\n          <Button\r\n            color=\"secondary\"\r\n            fullWidth={isMobile}\r\n            onClick={resetGame}\r\n            size={isMobile ? \"large\" : \"medium\"}\r\n            startIcon={<RefreshIcon />}\r\n          >\r\n            {t(\"reset-game\")}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            color=\"secondary\"\r\n            fullWidth={isMobile}\r\n            onClick={resetGame}\r\n            size={isMobile ? \"large\" : \"medium\"}\r\n            startIcon={<FlagIcon />}\r\n          >\r\n            {t(\"start-game\")}\r\n          </Button>\r\n        )}\r\n      </StyledButtonGroup>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\ntype StyledProps = {\r\n  $isMobile: boolean;\r\n};\r\n\r\nconst StyledGamePage = styled.div<StyledProps>`\r\n  ${(props) =>\r\n    props.$isMobile &&\r\n    css`\r\n      flex: 1;\r\n    `}\r\n`;\r\n\r\nconst StyledButtonGroup = styled.div<StyledProps>`\r\n  ${(props) =>\r\n    !props.$isMobile &&\r\n    css`\r\n      display: flex;\r\n      justify-content: center;\r\n\r\n      button:last-child {\r\n        margin-left: 20px;\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.$isMobile &&\r\n    css`\r\n      button:last-child {\r\n        margin-top: 20px;\r\n      }\r\n    `}\r\n`;\r\n","import { Button, useMediaQuery, useTheme } from \"@12emake/design-system\";\r\nimport {\r\n  Game as GameType,\r\n  deleteGame,\r\n  getGame,\r\n  setGame as setGameInStorage,\r\n} from \"../storage/game\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRightAlt\";\r\nimport { Game } from \"../components/game\";\r\nimport { MainContainer } from \"../components/shared/mainContainer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Home = () => {\r\n  const [game, setGame] = useState<GameType | undefined>();\r\n  const [loading, setLoading] = useState(true);\r\n  const [t] = useTranslation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  useEffect(() => {\r\n    getGame().then((value) => {\r\n      if (value) {\r\n        setGame(value);\r\n      }\r\n\r\n      setLoading(false);\r\n    });\r\n  }, [setGame]);\r\n\r\n  const startGame = () => {\r\n    const newGame: GameType = {\r\n      started: false,\r\n      players: [],\r\n    };\r\n    setGameInStorage(newGame).then(() => setGame(newGame));\r\n  };\r\n\r\n  const resetGame = () => {\r\n    deleteGame();\r\n    setGame(undefined);\r\n  };\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  if (game) {\r\n    return <Game game={game} resetGame={resetGame} isMobile={isMobile} />;\r\n  }\r\n\r\n  return (\r\n    <MainContainer $centered={!isMobile}>\r\n      <StyledHomePage $isMobile={isMobile}>Home</StyledHomePage>\r\n      <div>\r\n        <Button\r\n          size={isMobile ? \"large\" : \"medium\"}\r\n          color=\"secondary\"\r\n          fullWidth={isMobile}\r\n          onClick={startGame}\r\n          endIcon={<ArrowRightIcon />}\r\n        >\r\n          {t(\"start game\")}\r\n        </Button>\r\n      </div>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\ntype StyledHomePageProps = {\r\n  $isMobile?: boolean;\r\n};\r\n\r\nconst StyledHomePage = styled.div<StyledHomePageProps>`\r\n  ${(props) =>\r\n    props.$isMobile &&\r\n    css`\r\n      flex: 1;\r\n    `}\r\n`;\r\n\r\nexport default Home;\r\n","import Home from \"../../pages/home\";\r\nimport { Route } from \"../route\";\r\n\r\nconst home: Route = {\r\n  key: \"home\",\r\n  component: Home,\r\n  path: \"/\",\r\n  exact: true,\r\n};\r\n\r\nexport default home;\r\n","import { Route } from \"../route\";\r\n\r\nconst settings: Route = {\r\n  key: \"settings\",\r\n  path: \"/settings\",\r\n  exact: true,\r\n};\r\n\r\nexport default settings;\r\n","import {\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  Hidden,\r\n} from \"@12emake/design-system\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport home from \"../../routes/pages/home\";\r\nimport settings from \"../../routes/pages/settings\";\r\nimport styled from \"styled-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst BottomNavigationBar = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [value, setValue] = useState(location.pathname);\r\n  const [t] = useTranslation();\r\n\r\n  const onChange = (_: ChangeEvent<{}>, newValue: any) => {\r\n    setValue(newValue);\r\n    history.push(newValue);\r\n  };\r\n\r\n  return (\r\n    <Hidden mdUp>\r\n      <StyledBottomNavigation\r\n        component=\"footer\"\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        <StyledBottomNavigationAction\r\n          value={home.path}\r\n          label={t(\"home\")}\r\n          icon={home.path === value ? <HomeIcon /> : <HomeOutlinedIcon />}\r\n        />\r\n        <StyledBottomNavigationAction\r\n          value={settings.path}\r\n          label={t(\"settings\")}\r\n          icon={\r\n            settings.path === value ? (\r\n              <SettingsIcon />\r\n            ) : (\r\n              <SettingsOutlinedIcon />\r\n            )\r\n          }\r\n        />\r\n      </StyledBottomNavigation>\r\n    </Hidden>\r\n  );\r\n};\r\n\r\nconst StyledBottomNavigation = styled(BottomNavigation)`\r\n  position: static;\r\n  bottom: 0;\r\n  width: 100vw;\r\n  height: calc(env(safe-area-inset-bottom, -60px) + 60px);\r\n`;\r\n\r\nconst StyledBottomNavigationAction = styled(BottomNavigationAction)`\r\n  padding-bottom: env(safe-area-inset-bottom, 0) !important;\r\n  max-width: inherit !important;\r\n`;\r\n\r\nexport default BottomNavigationBar;\r\n","import { Link, LinkProps } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const NoDecorationLink: React.FunctionComponent<LinkProps> = (props) => (\r\n  <StyledLink {...props} />\r\n);\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: white !important;\r\n`;\r\n","import {\r\n  Button,\r\n  NavigationBar as ExternalNavigationBar,\r\n  Hidden,\r\n  Toolbar,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@12emake/design-system\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { NoDecorationLink } from \"../shared/noDecorationLink\";\r\nimport React from \"react\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst LOGO_IMAGE_NAME = \"molkky.svg\";\r\n\r\nexport const NavigationBar = () => {\r\n  const [t] = useTranslation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <StyledNavigationBar\r\n      position=\"static\"\r\n      color={isMobile ? \"transparent\" : \"primary\"}\r\n      $isMobile\r\n      $primarycolor={theme.palette.primary.main}\r\n      $secondarycolor={theme.palette.primary.light}\r\n    >\r\n      <Toolbar>\r\n        <StyledLogoContainer>\r\n          <Hidden mdUp>\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/${LOGO_IMAGE_NAME}`}\r\n              alt={t(\"home\")}\r\n            />\r\n          </Hidden>\r\n          <Hidden smDown>\r\n            <Link to=\"/\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/${LOGO_IMAGE_NAME}`}\r\n                alt={t(\"home\")}\r\n              />\r\n            </Link>\r\n          </Hidden>\r\n        </StyledLogoContainer>\r\n        <Hidden smDown>\r\n          <StyledLink to=\"/settings\">\r\n            <Button startIcon={<SettingsIcon />} color=\"inherit\" variant=\"text\">\r\n              {t(\"settings\")}\r\n            </Button>\r\n          </StyledLink>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </StyledNavigationBar>\r\n  );\r\n};\r\n\r\nconst StyledLink = styled(NoDecorationLink)`\r\n  margin-right: 20px;\r\n`;\r\n\r\ntype StyledNavigationBar = {\r\n  $isMobile: boolean;\r\n  $primarycolor: string;\r\n  $secondarycolor: string;\r\n};\r\n\r\nconst StyledNavigationBar = styled(ExternalNavigationBar)<StyledNavigationBar>`\r\n  background: ${(props) =>\r\n    `linear-gradient(45deg, ${props.$primarycolor} 0%, ${props.$secondarycolor} 100%)`};\r\n\r\n  ${(props) =>\r\n    props.$isMobile &&\r\n    css`\r\n      padding-top: env(safe-area-inset-top, 0);\r\n      box-shadow: none !important;\r\n\r\n      img {\r\n        height: 35px;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledLogoContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n\r\n  a {\r\n    display: flex;\r\n  }\r\n`;\r\n","import { get, set } from \"idb-keyval\";\r\n\r\nconst LANGUAGE_KEY = \"language\";\r\n\r\nexport const getLanguage = (): Promise<string> => get<string>(LANGUAGE_KEY);\r\n\r\nexport const setLanguage = (language: string): Promise<void> =>\r\n  set(LANGUAGE_KEY, language);\r\n","import {\r\n  Collapse,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Switch,\r\n} from \"@12emake/design-system\";\r\nimport React, { MouseEvent, useState } from \"react\";\r\n\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreMore from \"@material-ui/icons/ExpandMore\";\r\nimport FormatPaintIcon from \"@material-ui/icons/FormatPaint\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport { MainContainer } from \"../components/shared/mainContainer\";\r\nimport i18next from \"i18next\";\r\nimport { setLanguage } from \"../storage/language\";\r\nimport styled from \"styled-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ntype SettingsProps = {\r\n  darkModeOn: boolean;\r\n  toggleDarkModeOn: () => void;\r\n};\r\n\r\nconst Settings: React.FC<SettingsProps> = ({\r\n  darkModeOn,\r\n  toggleDarkModeOn,\r\n}) => {\r\n  const [openLanguageCollapse, setOpenLanguageCollapse] = useState(false);\r\n  const [t] = useTranslation();\r\n\r\n  const handleClick = () => {\r\n    setOpenLanguageCollapse(!openLanguageCollapse);\r\n  };\r\n\r\n  const changeLanguage = (event: MouseEvent<HTMLLIElement>) => {\r\n    const language = event.currentTarget.id;\r\n    i18next.changeLanguage(language);\r\n    setLanguage(language);\r\n    setOpenLanguageCollapse(false);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} sm={12} md={6}>\r\n          <StyledList\r\n            subheader={<ListSubheader>{t(\"settings\")}</ListSubheader>}\r\n          >\r\n            <ListItem button onClick={handleClick}>\r\n              <ListItemIcon>\r\n                <LanguageIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={t(\"language\")} />\r\n              {openLanguageCollapse ? <ExpandLessIcon /> : <ExpandMoreMore />}\r\n            </ListItem>\r\n            <Collapse in={openLanguageCollapse} timeout=\"auto\" unmountOnExit>\r\n              <List disablePadding>\r\n                <ListItem\r\n                  button\r\n                  className=\"list-item\"\r\n                  id=\"en\"\r\n                  onClick={changeLanguage}\r\n                >\r\n                  <ListItemText primary=\"English\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className=\"list-item\"\r\n                  id=\"fr\"\r\n                  onClick={changeLanguage}\r\n                >\r\n                  <ListItemText primary=\"Français\" />\r\n                </ListItem>\r\n              </List>\r\n            </Collapse>\r\n            <Divider />\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <FormatPaintIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={t(\"dark-mode\")} />\r\n              <ListItemSecondaryAction>\r\n                <Switch\r\n                  edge=\"end\"\r\n                  onChange={toggleDarkModeOn}\r\n                  checked={darkModeOn}\r\n                  inputProps={{ \"aria-labelledby\": \"switch-list-label-wifi\" }}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </StyledList>\r\n        </Grid>\r\n      </Grid>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nconst StyledList = styled(List)`\r\n  width: 100%;\r\n\r\n  .list-item {\r\n    padding-left: 73px;\r\n  }\r\n`;\r\n\r\nexport default Settings;\r\n","import { Button } from \"@12emake/design-system\";\r\nimport { MainContainer } from \"../components/shared/mainContainer\";\r\nimport { NoDecorationLink } from \"../components/shared/noDecorationLink\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst NotFound = () => {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <MainContainer>\r\n      <StyledNotFoundPage>\r\n        <div className=\"title\">404</div>\r\n        <div className=\"text\">{t(\"not-found\")}</div>\r\n        <NoDecorationLink to=\"/\">\r\n          <Button color=\"secondary\">{t(\"go-back\")}</Button>\r\n        </NoDecorationLink>\r\n      </StyledNotFoundPage>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nconst StyledNotFoundPage = styled.div`\r\n  text-align: center;\r\n\r\n  .text {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 35px;\r\n  }\r\n\r\n  .title {\r\n    font-size: 10rem;\r\n    font-weight: 900;\r\n  }\r\n`;\r\n\r\nexport default NotFound;\r\n","import { Route } from \"./route\";\r\nimport home from \"./pages/home\";\r\nimport notFound from \"./pages/notFound\";\r\n\r\nconst routes: Route[] = [home, notFound];\r\n\r\nexport default routes;\r\n","import NotFound from \"../../pages/notFound\";\r\nimport { Route } from \"../route\";\r\n\r\nconst notFound: Route = {\r\n  key: \"home\",\r\n  component: NotFound,\r\n};\r\n\r\nexport default notFound;\r\n","import { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ThemeProvider, useMediaQuery } from \"@12emake/design-system\";\r\nimport { getDarkMode, setDarkMode } from \"./storage/darkModeOn\";\r\n\r\nimport BottomNavigationBar from \"./components/navigation/bottomNavigationBar\";\r\nimport { NavigationBar } from \"./components/navigation/navigationBar\";\r\nimport Settings from \"./pages/settings\";\r\nimport { getLanguage } from \"./storage/language\";\r\nimport i18next from \"i18next\";\r\nimport routes from \"./routes\";\r\nimport settings from \"./routes/pages/settings\";\r\n\r\nconst App = () => {\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [darkModeOn, setDarkModeOn] = useState(prefersDarkMode);\r\n\r\n  useEffect(() => {\r\n    getDarkMode().then((value) => {\r\n      if (value && value !== darkModeOn) {\r\n        setDarkModeOn(value);\r\n      }\r\n\r\n      getLanguage().then((value) => {\r\n        if (i18next.language !== value) {\r\n          i18next.changeLanguage(value);\r\n        }\r\n\r\n        setLoading(false);\r\n      });\r\n    });\r\n  }, [setDarkModeOn, setLoading]);\r\n\r\n  const toggleDarkModeOn = () => {\r\n    setDarkModeOn(!darkModeOn);\r\n    setDarkMode(!darkModeOn);\r\n  };\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkModeOn ? \"darkUnderTheLake\" : \"underTheLake\"}>\r\n      <HashRouter>\r\n        <NavigationBar />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={settings.path}\r\n            render={() => (\r\n              <Settings\r\n                darkModeOn={darkModeOn}\r\n                toggleDarkModeOn={toggleDarkModeOn}\r\n              />\r\n            )}\r\n          />\r\n          {routes.map(({ key, ...props }) => (\r\n            <Route key={key} {...props} />\r\n          ))}\r\n        </Switch>\r\n        <BottomNavigationBar />\r\n      </HashRouter>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./internalization/i18n\";\n\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}